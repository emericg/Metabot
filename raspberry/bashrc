# Bail out if the shell is not interactive
[[ $- != *i* ]] && return

###############################################################################

## BASH COLORS
txtrst="\[\e[0m\]"    # Text reset
txtblk="\[\e[0;30m\]" # Black - Regular
txtred="\[\e[0;31m\]" # Red
txtgrn="\[\e[0;32m\]" # Green
txtylw="\[\e[0;33m\]" # Yellow
txtblu="\[\e[0;34m\]" # Blue
txtpur="\[\e[0;35m\]" # Purple
txtcyn="\[\e[0;36m\]" # Cyan
txtwht="\[\e[0;37m\]" # White
bldblk="\[\e[1;30m\]" # Black - Bold
bldred="\[\e[1;31m\]" # Red
bldgrn="\[\e[1;32m\]" # Green
bldylw="\[\e[1;33m\]" # Yellow
bldblu="\[\e[1;34m\]" # Blue
bldpur="\[\e[1;35m\]" # Purple
bldcyn="\[\e[1;36m\]" # Cyan
bldwht="\[\e[1;37m\]" # White

## SYSTEM COLORS
export LS_OPTIONS='--color=auto'
alias ls='ls --color=auto'
alias grep='grep --color=auto'
alias diff='colordiff'
eval `dircolors -b`

## Command alias
alias ls='ls $LS_OPTIONS'
alias ll='ls $LS_OPTIONS -l'
alias l='ls $LS_OPTIONS -lA'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'

## Default text editor
export EDITOR=/usr/bin/nano

## Print working directory after a cd
cd() {
  if [[ $@ == '-' ]]; then
    builtin cd "$@" > /dev/null  # We'll handle pwd
  else
    builtin cd "$@"
  fi
  echo -e "   \033[1;30m"`pwd`"\033[0m"
}

###############################################################################

## BASH PROMPT
if [ `whoami` = root ]; then
  PS1="\[\e[00;34m\]\@\[\e[0m\] $txtrst[$bldred\u$txtrst@\[\033[1;37;40m\]\h$txtgrn:$bldwht\W$txtrst]$bldwht \$ $txtrst"
else
  PS1="\[\e[00;34m\]\@\[\e[0m\] $txtrst[\u$txtgrn:$bldwht\W$txtrst]$bldwht \$ $txtrst"
fi

###############################################################################
## Greetings!

c1="$(tput sgr0)$(tput setaf 4)" # blue
c2="$(tput bold)$(tput setaf 4)" # bld blue
c3="$(tput bold)$(tput setaf 7)" # bld white
c4="$(tput bold)$(tput setaf 1)" # bld red
c5="$(tput bold)$(tput setaf 2)" # bld green
c6="$(tput sgr0)$(tput setaf 7)" # white

# Show date
DATE="$(tput setaf 2)[$(tput setaf 7)$(date)$(tput setaf 2)]"

# Show kernel info
KERNEL="$(tput setaf 2)[$(tput setaf 7)$(uname -srmn)$(tput setaf 2)]"

# BER and Metabot server daemon status
BER_SRV=`/usr/bin/ps -aux | grep [b]er_server`
BOT_SRV=`/usr/bin/ps -aux | grep [M]etaBotServer`

if [[ ${BER_SRV} ]]; then
    SRV="$(tput setaf 2)[$(tput setaf 7)BER server is $c5 running$(tput sgr0)$(tput setaf 7)!$(tput setaf 2)]"
elif [[ ${BOT_SRV} ]]; then
    SRV="$(tput setaf 2)[$(tput setaf 7)Metabot server is $c5 running$(tput sgr0)$(tput setaf 7)!$(tput setaf 2)]"
else
    SRV="$(tput bold)$(tput setaf 2)[$(tput setaf 7)Robots server are $c4 NOT running...$(tput bold)$(tput setaf 2)]"
fi

echo "        $c2.$c1"
echo "       $c2/$c1#$c2\\$c3   Raspberry *ROBOT edition"
echo "      $c2/$c1###$c2\\$c3    Powered by Arch Linux!"
echo "     $c2/$c1#####$c2\\$c1"
echo "    $c2/$c1##,-,##$c2\\$c1  $DATE "
echo "   $c2/$c1##(   )##$c2\\$c1   $KERNEL"
echo "  $c2/$c1#.--   --.#$c2\\$c1    $SRV" $'\n'
tput sgr0
